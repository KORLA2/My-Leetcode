/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   string directions(TreeNode*root,int start,int end,string ch){
       
      if(!root)return "";
       
       string left = directions(root->left,start,end,"L");  
       
      string right = directions(root->right,start,end,"R");

            if(root->val==end) {
                
                if(left==""&&right=="")return ch;
                return left== ""?right:left;
            }
       
       if(root->val==start) {
                       
           if(left==""&&right=="")return "U";
                
           return left== ""?right:left;
           
       }
       if(left!=""&&right!="") {
           
           if(left[0]=='U')return left+right;
           return right+left;
       }
           
           if(left!=""&&right==""){
               if(left[0]=='U')return left+'U';
               return ch+left;
           }
            if(left==""&&right!=""){
           if(right[0]=='U')return right+'U';
           return ch+right;
           
       }
      

           
       
   
       return "";
   }
    
    
    string getDirections(TreeNode* root, int start, int end) {
        
  return directions(root,start,end,"");
        
    }
};
